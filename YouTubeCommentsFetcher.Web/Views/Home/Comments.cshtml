@using Microsoft.AspNetCore.Html
@model YouTubeCommentsViewModel

@{
    ViewData["Title"] = "YouTube Comments Analysis";
}

<div class="container py-4">
    <h1 class="display-4 mb-4 text-primary">@ViewData["Title"]</h1>
    <div class="card mb-4 shadow">
        <div class="card-body d-flex justify-content-between align-items-center">
            <div>
                <h5 class="card-title mb-0">
                    <i class="fas fa-database me-2"></i>Управление данными
                </h5>
            </div>
            <div>
                <button onclick="saveData()"
                        class="btn btn-primary">
                    <i class="fas fa-save me-2"></i>Сохранить как JSON
                </button>
            </div>
        </div>
    </div>

    <div class="row g-4 mb-5">
        <div class="col-lg-6">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0"><i class="fas fa-chart-bar me-2"></i>Общая статистика</h5>
                </div>
                <div class="card-body">
                    <dl class="stats-grid">
                        <div class="stat-item">
                            <dt>Всего взаимодействий</dt>
                            <dd>@(Model.Statistics.TotalComments + Model.Statistics.TotalReplies)</dd>
                        </div>
                        <div class="stat-item">
                            <dt>Всего комментариев</dt>
                            <dd>@Model.Statistics.TotalComments</dd>
                        </div>
                        <div class="stat-item">
                            <dt>Уникальных авторов</dt>
                            <dd>@Model.Statistics.UniqueAuthors</dd>
                        </div>
                        <div class="stat-item">
                            <dt>Среднее на видео</dt>
                            <dd>@Model.Statistics.AverageCommentsPerVideo</dd>
                        </div>
                        <div class="stat-item">
                            <dt>Период комментариев</dt>
                            <dd>@(Model.Statistics.OldestCommentDate?.ToString("dd.MM.yy")) — @(Model.Statistics.NewestCommentDate?.ToString("dd.MM.yy"))</dd>
                        </div>
                    </dl>
                </div>
            </div>
        </div>

        <div class="col-lg-6">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-danger text-white">
                    <h5 class="mb-0"><i class="fas fa-fire me-2"></i>Популярное</h5>
                </div>
                <div class="card-body">
                    <h6 class="text-muted mb-3"><i class="fas fa-reply me-1"></i>По ответам</h6>
                    @foreach (TopComment comment in Model.Statistics.TopCommentsByReplies)
                    {
                        <div class="comment-card mb-3">
                            <div class="comment-text">@(new HtmlString(comment.CommentText))</div>
                            <div class="d-flex justify-content-between mt-2">
                                <small class="text-muted">@comment.Author</small>
                                <small class="text-primary"><i class="fas fa-reply"></i> @comment.Count</small>
                            </div>
                        </div>
                    }
                    <h6 class="text-muted mb-3"><i class="fas fa-heart me-1"></i>По лайкам</h6>
                    @foreach (TopComment comment in Model.Statistics.TopCommentsByLikes)
                    {
                        <div class="comment-card mb-3">
                            <div class="comment-text">@(new HtmlString(comment.CommentText))</div>
                            <div class="d-flex justify-content-between mt-2">
                                <small class="text-muted">@comment.Author</small>
                                <small class="text-danger"><i class="fas fa-heart"></i> @comment.Count</small>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="row g-4 mb-5">
        <div class="col-md-4">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-info text-white">
                    <h5 class="mb-0"><i class="fas fa-users me-2"></i>Топ авторов (комментарии)</h5>
                </div>
                <div class="card-body">
                    @foreach (TopAuthor author in Model.Statistics.TopAuthorsByComments.ByComments)
                    {
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <div class="d-flex align-items-center">
                                <i class="fas fa-user-circle me-2 text-muted"></i>
                                <span>@author.AuthorName</span>
                            </div>
                            <span class="badge bg-primary">@author.CommentsCount</span>
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-info text-white">
                    <h5 class="mb-0"><i class="fas fa-users me-2"></i>Топ авторов (ответы)</h5>
                </div>
                <div class="card-body">
                    @foreach (TopAuthor author in Model.Statistics.TopAuthorsByComments.ByReplies)
                    {
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <div class="d-flex align-items-center">
                                <i class="fas fa-user-circle me-2 text-muted"></i>
                                <span>@author.AuthorName</span>
                            </div>
                            <span class="badge bg-primary">@author.CommentsCount</span>
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-info text-white">
                    <h5 class="mb-0"><i class="fas fa-users me-2"></i>Топ авторов (все)</h5>
                </div>
                <div class="card-body">
                    @foreach (TopAuthor author in Model.Statistics.TopAuthorsByComments.ByActivity)
                    {
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <div class="d-flex align-items-center">
                                <i class="fas fa-user-circle me-2 text-muted"></i>
                                <span>@author.AuthorName</span>
                            </div>
                            <span class="badge bg-primary">@author.CommentsCount</span>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="row g-4 mb-5">
        <div class="col-md-4">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-warning text-dark">
                    <h5 class="mb-0"><i class="fas fa-comment-dots me-2"></i>Частые слова (комментарии)</h5>
                </div>
                <div class="card-body">
                    @foreach (TopWord word in Model.Statistics.MostUsedWords.ByComments)
                    {
                        <span class="badge bg-warning text-dark me-1 mb-1">@word.Word (@word.Count)</span>
                    }
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-warning text-dark">
                    <h5 class="mb-0"><i class="fas fa-comment-dots me-2"></i>Частые слова (ответы)</h5>
                </div>
                <div class="card-body">
                    @foreach (TopWord word in Model.Statistics.MostUsedWords.ByReplies)
                    {
                        <span class="badge bg-warning text-dark me-1 mb-1">@word.Word (@word.Count)</span>
                    }
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-warning text-dark">
                    <h5 class="mb-0"><i class="fas fa-comment-dots me-2"></i>Частые слова (все)</h5>
                </div>
                <div class="card-body">
                    @foreach (TopWord word in Model.Statistics.MostUsedWords.ByActivity)
                    {
                        <span class="badge bg-warning text-dark me-1 mb-1">@word.Word (@word.Count)</span>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="row g-4 mb-5">
        <div class="col-12">
            <h3 class="mb-4 text-secondary"><i class="fas fa-chart-line me-2"></i>Расширенная статистика</h3>
            <div class="row row-cols-1 row-cols-lg-3 g-4">
                <div class="col">
                    <div class="card shadow-sm h-100">
                        <div class="card-header bg-purple text-white">
                            <h5 class="mb-0"><i class="fas fa-retweet me-2"></i>Активность</h5>
                        </div>
                        <div class="card-body">
                            @foreach (TopVideo video in Model.Statistics.TopInteractiveVideos)
                            {
                                <div class="video-card mb-3">
                                    <div class="video-thumbnail mb-2">
                                        <img src="@video.ThumbnailUrl"
                                             class="rounded"
                                             alt="@video.VideoTitle">
                                    </div>
                                    <h6 class="video-title">@video.VideoTitle</h6>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <span class="badge bg-primary me-2">@video.CommentsCount</span>
                                            <span class="badge bg-success">@video.RepliesCount</span>
                                        </div>
                                        <span class="badge bg-purple">@video.TotalInteractions</span>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <div class="col">
                    <div class="card shadow-sm h-100">
                        <div class="card-header bg-success text-white">
                            <h5 class="mb-0"><i class="fas fa-comments me-2"></i>Обсуждаемые</h5>
                        </div>
                        <div class="card-body">
                            @foreach (TopVideo video in Model.Statistics.TopCommentedVideos)
                            {
                                <div class="video-card mb-3">
                                    <div class="video-thumbnail mb-2">
                                        <img src="@video.ThumbnailUrl"
                                             class="rounded"
                                             alt="@video.VideoTitle">
                                    </div>
                                    <h6 class="video-title">@video.VideoTitle</h6>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <small class="text-muted">Комментарии</small>
                                        <span class="badge bg-success">@video.CommentsCount</span>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <div class="col">
                    <div class="card shadow-sm h-100">
                        <div class="card-header bg-danger text-white">
                            <h5 class="mb-0"><i class="fas fa-heart me-2"></i>Лайки</h5>
                        </div>
                        <div class="card-body">
                            @foreach (TopVideo video in Model.Statistics.TopLikedCommentsVideos)
                            {
                                <div class="video-card mb-3">
                                    <div class="video-thumbnail mb-2">
                                        <img src="@video.ThumbnailUrl"
                                             class="rounded"
                                             alt="@video.VideoTitle">
                                    </div>
                                    <h6 class="video-title">@video.VideoTitle</h6>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <small class="text-muted">Лайки</small>
                                        <span class="badge bg-danger">@video.CommentsCount</span>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <div class="col">
                    <div class="card shadow-sm h-100">
                        <div class="card-header bg-purple text-white">
                            <h5 class="mb-0"><i class="fas fa-comment-dots me-2"></i>Обсуждения</h5>
                        </div>
                        <div class="card-body">
                            @foreach (TopVideo video in Model.Statistics.TopRepliedVideos)
                            {
                                <div class="video-card mb-3">
                                    <div class="video-thumbnail mb-2">
                                        <img src="@video.ThumbnailUrl"
                                             class="rounded"
                                             alt="@video.VideoTitle">
                                    </div>
                                    <h6 class="video-title">@video.VideoTitle</h6>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <small class="text-muted">Ответы</small>
                                        <span class="badge bg-purple">@video.CommentsCount</span>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="card shadow-sm mb-5">
        <div class="card-header bg-secondary text-white">
            <h5 class="mb-0"><i class="fas fa-comments me-2"></i>Все комментарии</h5>
        </div>
        <div class="card-body">
            <div class="comments-list">
                @foreach (Comment comment in Model.Comments)
                {
                    <div class="comment-item mb-4">
                        <div class="comment-header d-flex align-items-center mb-2">
                            <i class="fas fa-user-circle me-2 fa-lg text-muted"></i>
                            <strong>@comment.AuthorDisplayName</strong>
                            <div class="d-flex align-items-center ms-auto">
                                <span class="likes-badge me-3">
                                    <i class="fas fa-heart text-danger"></i>
                                    @comment.LikeCount
                                </span>
                                <small class="text-muted ms-2">
                                    @comment.PublishedAt.Value.ToString("dd.MM.yy HH:mm")
                                </small>
                            </div>

                        </div>
                        <div class="comment-body bg-light p-3 rounded">
                            @(new HtmlString(comment.TextDisplay))
                            @if (comment.Replies.Any())
                            {
                                <div class="replies mt-3">
                                    @foreach (Comment reply in comment.Replies)
                                    {
                                        <div class="reply-item bg-white p-2 rounded mt-2">
                                            <div class="d-flex align-items-center">
                                                <i class="fas fa-reply me-2 fa-sm text-muted"></i>
                                                <strong>@reply.AuthorDisplayName</strong>
                                                <span class="likes-badge ms-3">
                                                    <i class="fas fa-heart text-danger"></i>
                                                    @reply.LikeCount
                                                </span>
                                            </div>
                                            <div class="reply-text ms-4 mt-1">
                                                @(new HtmlString(reply.TextDisplay))
                                                <small class="text-muted d-block mt-1">
                                                    @reply.PublishedAt.Value.ToString("dd.MM.yy HH:mm")
                                                </small>
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="card shadow-sm mb-5">
        <div class="card-header bg-secondary text-white">
            <h5 class="mb-0"><i class="fas fa-list-ol me-2"></i>Комментарии по видео</h5>
        </div>
        <div class="card-body">
            <div class="accordion"
                 id="videoAccordion">
                @foreach (VideoComments video in Model.Videos)
                {
                    <div class="accordion-item">
                        <h2 class="accordion-header">
                            <button class="accordion-button collapsed"
                                    type="button"
                                    data-bs-toggle="collapse"
                                    data-bs-target="#video-@video.VideoId">
                                @video.VideoTitle
                                <span class="badge bg-primary ms-2">@video.Comments.Count коммент.</span>
                                <span class="badge bg-success ms-2">@video.Comments.Sum(c => c.Replies.Count) ответов</span>
                            </button>
                        </h2>
                        <div id="video-@video.VideoId"
                             class="accordion-collapse">
                            <div class="accordion-body">
                                <ul class="list-unstyled">
                                    @foreach (Comment comment in video.Comments)
                                    {
                                        <li class="mb-3">
                                            <div class="comment-header d-flex align-items-center mb-2">
                                                <i class="fas fa-user-circle me-2 fa-sm text-muted"></i>
                                                <strong>@comment.AuthorDisplayName</strong>
                                                <div class="d-flex align-items-center ms-auto">
                                                    <span class="likes-badge me-3">
                                                        <i class="fas fa-heart text-danger"></i>
                                                        @comment.LikeCount
                                                    </span>
                                                    <small class="text-muted">@comment.PublishedAt.Value.ToString("dd.MM.yy HH:mm")</small>
                                                </div>
                                            </div>
                                            <div class="comment-body bg-light p-3 rounded">
                                                @(new HtmlString(comment.TextDisplay))
                                                <!-- Ответы -->
                                                @if (comment.Replies.Any())
                                                {
                                                    <div class="replies mt-3">
                                                        @foreach (Comment reply in comment.Replies)
                                                        {
                                                            <div class="reply-item bg-white p-2 rounded mt-2">
                                                                <div class="d-flex align-items-center">
                                                                    <i class="fas fa-reply me-2 fa-sm text-muted"></i>
                                                                    <strong>@reply.AuthorDisplayName</strong>
                                                                    <span class="likes-badge ms-3">
                                                                        <i class="fas fa-heart text-danger"></i>
                                                                        @reply.LikeCount
                                                                    </span>
                                                                </div>
                                                                <div class="reply-text ms-4 mt-1">
                                                                    @(new HtmlString(reply.TextDisplay))
                                                                    <small class="text-muted d-block mt-1">
                                                                        @reply.PublishedAt.Value.ToString("dd.MM.yy HH:mm")
                                                                    </small>
                                                                </div>
                                                            </div>
                                                        }
                                                    </div>
                                                }
                                            </div>
                                        </li>
                                    }
                                </ul>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<style>
    :root {
        --bg-purple: #6f42c1;
    }

    .card {
        border: none;
        border-radius: 12px;
    }

    .card-header {
        border-radius: 12px 12px 0 0 !important;
        padding: 1rem 1.5rem;
    }

    .stats-grid {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 1rem;
    }

    .stat-item {
        background: #f8f9fa;
        padding: 1rem;
        border-radius: 8px;
    }

    .stat-item dt {
        font-size: 0.9rem;
        color: #6c757d;
    }

    .stat-item dd {
        font-size: 1.1rem;
        font-weight: 500;
        margin-bottom: 0;
    }

    .comment-card {
        background: #fff;
        padding: 1rem;
        border-radius: 8px;
        border: 1px solid #eee;
    }

    .video-card {
        position: relative;
        transition: transform 0.2s;
    }

    .video-card:hover {
        transform: translateY(-3px);
    }

    .video-thumbnail img {
        width: 100%;
        height: 150px;
        object-fit: cover;
    }

    .video-title {
        font-size: 0.95rem;
        line-height: 1.3;
        height: 2.6em;
        overflow: hidden;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
    }

    .bg-purple {
        background-color: var(--bg-purple) !important;
    }

    .badge {
        padding: 0.5em 0.75em;
        border-radius: 8px;
        font-weight: 500;
    }

    .comments-list {
        max-height: 600px;
        overflow-y: auto;
        padding-right: 10px;
    }

    .comment-item {
        border-bottom: 1px solid #eee;
        padding-bottom: 1rem;
    }

    .comment-header small {
        font-size: 0.8rem;
    }

    .reply-item {
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    }

    .accordion-button {
        font-weight: 500;
        background-color: #f8f9fa;
    }

    .accordion-button:not(.collapsed) {
        background-color: #e9ecef;
        color: #212529;
    }

    .video-interaction-badges {
        display: flex;
        gap: 5px;
    }

    .comment-card {
        transition: transform 0.2s;
    }

    .comment-card:hover {
        transform: translateX(5px);
    }

    .likes-badge {
        display: inline-flex;
        align-items: center;
        gap: 5px;
        background: rgba(255, 0, 0, 0.1);
        padding: 3px 8px;
        border-radius: 15px;
        font-weight: 500;
    }

    .likes-badge i {
        font-size: 0.9em;
    }

    .comment-header {
        gap: 15px;
        flex-wrap: wrap;
    }

    .comment-body {
        position: relative;
        padding-left: 40px;
    }

    .comment-body::before {
        content: "";
        position: absolute;
        left: 15px;
        top: 15px;
        bottom: 15px;
        width: 2px;
        background: #eee;
    }
</style>

<script>
    function saveData() {
        const model = @Json.Serialize(Model);

        fetch('@Url.Action("SaveData")', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(model)
        })
            .then(response => {
                if (!response.ok) throw new Error(response.statusText);
                return response.blob();
            })
            .then(blob => {
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = `youtube_comments_${new Date().toISOString()}.json`;
                document.body.appendChild(a);
                a.click();
                a.remove();
            })
            .catch(error => alert('Ошибка сохранения: ' + error.message));
    }
</script>
